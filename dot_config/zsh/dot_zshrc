# Environment Variables
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_RUNTIME_DIR="$HOME/.cache"
export WORKSPACE="$HOME/Workspace"
export OBSIDIAN="$HOME/Library/Mobile Documents/iCloud~md~obsidian/Documents/Notes"

# Configurations
export ASDF_CONFIG_FILE="$XDG_CONFIG_HOME/asdf/asdfrc"
export ASDF_DATA_DIR="$XDG_DATA_HOME/asdf"
export ASDF_DIR="$XDG_DATA_HOME/asdf"
export BOB_CONFIG="$XDG_DATA_HOME/bob/config.json"
export CHEAT_CONFIG_PATH="$XDG_CONFIG_HOME/cheat/conf.yml"
export CHEAT_USE_FZF=true
export CHEZMOI_SOURCE="$XDG_DATA_HOME/chezmoi"
export CHTSH_HOME="$XDG_CONFIG_HOME/bin/cht.sh"
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
export LESS="-R --lesskey-src=$XDG_CONFIG_HOME/less/lesskey"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
export PAGER=less
export PSQLRC="$XDG_CONFIG_HOME/psql/psqlrc"
export PSQL_HISTORY="$XDG_DATA_HOME/psql_history"
export PYLINTRC="$XDG_CONFIG_HOME/python/pylintrc"
export PYTHONSTARTUP="$XDG_CONFIG_HOME/python/pythonrc"
export REDISCLI_RCFILE="$XDG_CONFIG_HOME/redis/redisclirc"
export REDISCLI_HISTFILE="$XDG_DATA_HOME/rediscli_history"
export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME/rg/ripgreprc"
export STARSHIP_CONFIG="$XDG_CONFIG_HOME/starship/starship.toml"
export _ZO_DATA_DIR="$XDG_DATA_HOME/zoxide"
export GITLINT_CONFIG="$XDG_CONFIG_HOME/git/gitlintrc"
export CARGO_HOME="$XDG_DATA_HOME/cargo"
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export TEALDEER_CONFIG_DIR="$XDG_CONFIG_HOME/tealdeer"
export ZSH="$XDG_CONFIG_HOME/oh-my-zsh"
export ZSH_EVALCACHE_DIR="$XDG_CACHE_HOME/zsh-evalcache"
export ZDOTDIR="$XDG_CONFIG_HOME/zsh"
export ZK_NOTEBOOK_DIR="$OBSIDIAN"
export CC=gcc-12
export TMS_CONFIG_PATH="$XDG_CONFIG_HOME/tms/config.toml"
export MISE_DATA_DIR="$XDG_DATA_HOME/mise"
export MISE_CACHE_DIR="$XDG_CACHE_HOME/mise"
export MISE_CONFIG_DIR="$XDG_CONFIG_HOME/mise"
export MISE_STATE_DIR="$XDG_STATE_HOME/mise"
export GOPATH="$WORKSPACE/go"

# PATH
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/X11/bin
export PATH=/Library/TeX/texbin:$PATH # texlive & mactex
export PATH="$HOME"/.local/script:$PATH # custom scripts
export PATH="$CARGO_HOME"/bin:$PATH # rust
export PATH="$RUSTUP_HOME"/toolchains/stable-aarch64-apple-darwin/bin:$PATH # rust
export PATH="$XDG_DATA_HOME"/bob/nvim-bin:$PATH # neovim
export PATH="$XDG_DATA_HOME"/nvim/mason/bin:$PATH # lsp, linters, formatters
export PATH=/opt/homebrew/bin:/opt/homebrew/sbin:$PATH # should be last line

###############################################################################
############## OH-MY-ZSH CONFIG ###############################################
###############################################################################
# Path to completion cache file.
ZSH_CACHE_DIR="$XDG_CACHE_HOME/oh-my-zsh"
ZSH_COMPDUMP="$ZSH_CACHE_DIR/.zcompdump"

# Disable auto-setting terminal title. Required by tmuxinator.
DISABLE_AUTO_TITLE="true"

# Enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

HISTFILE="$XDG_DATA_HOME/zsh_history"
HISTSIZE=1000000
HISTORY_IGNORE="(ls|cd|z|eza|exit)*"
HIST_STAMPS="yyyy-mm-dd"
setopt EXTENDED_HISTORY      # Write the history file in the ':start:elapsed;command' format.
setopt INC_APPEND_HISTORY    # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY         # Share history between all sessions.
setopt HIST_IGNORE_DUPS      # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS  # Delete an old recorded event if a new event is a duplicate.
setopt HIST_IGNORE_SPACE     # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS     # Do not write a duplicate event to the history file.
setopt HIST_VERIFY           # Do not execute immediately upon history expansion.
setopt APPEND_HISTORY        # append to history file (Default)
setopt HIST_NO_STORE         # Don't store history commands
setopt HIST_REDUCE_BLANKS    # Remove superfluous blanks from each command line being added to the history.

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    evalcache
    copypath
    # copyfile # cat <file> | pbcopy
    history
    zsh-autosuggestions
    zsh-completions
    zsh-syntax-highlighting
    zsh-vim-mode
    # zsh-vi-mode
)

# homebrew's completion. !important: need to be sourced before omz
FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
source $ZSH/oh-my-zsh.sh

###############################################################################
############## ZSH Plugin Config ##############################################
###############################################################################

# vi mode
bindkey 'kh' vi-cmd-mode    # `kh` will swtich to NORMAL mode instantly.
bindkey -M   vicmd  k    vi-down-line-or-history
bindkey -M   vicmd  h    vi-up-line-or-history
bindkey -M   vicmd  j    vi-backward-char
bindkey -M   vicmd  l    vi-forward-char
bindkey -M   visual k    vi-down-line-or-history
bindkey -M   visual h    vi-up-line-or-history
bindkey -M   visual j    vi-backward-char
bindkey -M   visual l    vi-forward-char

# zsh-vim-mode {{
# bindkey -v
# bindkey -rpM viins '^[^['   # <Esc><Esc> will switch to NORMAL mode instantly.
MODE_CURSOR_VIINS="bar"
MODE_CURSOR_REPLACE="underline"
# MODE_CURSOR_VIINS="#d8dee8 blinking bar"
# MODE_CURSOR_VICMD="#d8dee8 steady block"
# MODE_CURSOR_VISUAL="$MODE_CURSOR_VICMD steady bar"


###############################################################################
############## GENERAL CONFIG #################################################
###############################################################################

_evalcache zoxide init zsh
_evalcache starship init zsh
_evalcache mise activate zsh
_evalcache thefuck --alias

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export VISUAL='nvim'
  export EDITOR='nvim'
else
  export VISUAL='nvim'
  export EDITOR='nvim'
fi


###############################################################################
############## Packages #######################################################
###############################################################################
## fzf
# Setup fzf
if [[ ! "$PATH" == */opt/homebrew/opt/fzf/bin* ]]; then
  PATH="${PATH:+${PATH}:}/opt/homebrew/opt/fzf/bin"
fi
# Auto-completion
[[ $- == *i* ]] && source "/opt/homebrew/opt/fzf/shell/completion.zsh" 2> /dev/null
# Key bindings
source "/opt/homebrew/opt/fzf/shell/key-bindings.zsh"
export FZF_CTRL_T_OPTS="
  --preview 'bat -n --color=always {}'
  --bind 'ctrl-/:change-preview-window(up|down|hidden|)'"
export FZF_CTRL_R_OPTS="--layout=reverse" # history
export FZF_DEFAULT_COMMAND="fd --type file --hidden --follow"
export FZF_DEFAULT_OPTS="
  --color='fg:#98A2B5,fg+:#98A2B5,fg+:regular,bg+:#434C5E'
  --color='hl:#D8DEE9,hl:bold,hl+:#D8DEE9,info:#434C5E,border:#616E88'
  --color='gutter:-1,pointer:bright-blue'
  --prompt=' ' --pointer=' '" # 
export FZF_TMUX_OPTS="-p 50%,50% --reverse"

# ripgrep
# alias rg="RIPGREP_CONFIG_PATH=$RIPGREP_CONFIG_PATH rg"

## zoxide
# export _ZO_FZF_OPTS
# export _ZO_ECHO
# export _ZO_EXCLUDE_DIRS


###############################################################################
############## Alias ##########################################################
###############################################################################

#### General #################
alias c=clear           # clear screen
alias f=open            # open in MacOS finder
# alias dirs='dirs -v'    # disp stack w/ index
# alias jobs='jobs -l'    # list jobs with process id
alias mkdir='mkdir -pv' # mkdir: create parent directories
alias so="source $XDG_CONFIG_HOME/zsh/.zshrc"

#### Alternatives ############
alias find=fd
alias grep=rg
alias top=btm
alias cat=bat
alias du=dust
alias cd=z
alias dust='dust --reverse'
# alias sed=sd
# alias ssh=mosh
alias ls='eza --group-directories-first'
alias lt='eza --tree --level'
alias ltd='eza -a --tree --only-dirs'
alias lta='eza -a --tree --level 2'
alias l='eza -lhg --git --time-style long-iso --group-directories-first'
alias ll='eza -lhg --git --time-style long-iso --group-directories-first'
alias la='eza -lhga --git --time-style long-iso --group-directories-first'

#### fzf #####################
alias nvimf='fd --type file --hidden | fzf --preview "bat --color=always -n {1}" --preview-window=right,60% | xargs nvim'
alias jqf='fd --type file "json$" | fzf --preview "bat --color=always -n {1}" --preview-window=right,60% | xargs cat | jq "."'
alias tldrf='tldr --list | fzf --preview "tldr --color always {1}" --preview-window=right,70% | xargs tldr'
alias openf='fd --type directory --max-depth 3 | fzf | xargs open'
# alias chtf="cheat -l | tail -n +2 | fzf --preview 'cheat {1}'"
# alias chtf="cheat -l | tail -n +2 | sd -f m '$(\w*)\s*/[^/]*\s*(\w*)' '$1  $3'| fzf "

#### quick edit ##############
alias config="z $XDG_CONFIG_HOME"
alias data="z $XDG_DATA_HOME"
alias state="z $XDG_STATE_HOME"
alias cache="z $XDG_CACHE_HOME"
alias conf="z $CHEZMOI_SOURCE/dot_config && vim"
alias chez=chezmoi
alias note="z $WORKSPACE/Notes && vim"
alias notes=note
# alias confzsh="nvim $XDG_CONFIG_HOME/zsh/.zshrc && chezmoi add $XDG_CONFIG_HOME/zsh/.zshrc && source $XDG_CONFIG_HOME/zsh/.zshrc"
# alias confnvim="z $XDG_CONFIG_HOME/nvim && nvim"
# alias confala="nvim $XDG_CONFIG_HOME/alacritty/alacritty.yml && chezmoi add $XDG_CONFIG_HOME/alacritty/alacritty.yml"

#### Homebrew ################
alias brewleaves='brew leaves | xargs brew deps --formula --for-each | sed "s/^.*:/$(tput setaf 4)&$(tput sgr0)/"'
alias brewdeps='brew list -1 --formula | xargs brew deps --formula --for-each | sed "s/^.*:/$(tput setaf 4)&$(tput sgr0)/"'
alias brewlist='brew info --json=v2 --installed | jq -r ".formulae[]|select(any(.installed[]; .installed_on_request)).full_name"'

#### Git #####################
alias gg='lazygit'
alias gst='git status'
alias ga='git add'
alias grs='git restore'
alias grm='git rm'
alias gcm='git commit'
alias gcma='git commit --amend'
alias gcman='git commit --amend --no-edit'
alias goops='git commit --amend --no-edit'
alias gcl='git clone'
alias gclwt="git clone-worktree"
alias gwt='git worktree'
alias gco='git checkout'
alias gdi='git diff'
alias gdiff='git diff'
alias glast='git log -5'
alias glog='git log --graph --oneline --decorate'
alias gbr='git branch'
alias gsw='git switch'
alias gswf='git branch --sort=-committerdate | fzf --header "Checkout recent branch" --preview "git diff --color=always {1}" | xargs git switch'
alias gsta='git stash'
alias gps='git push'
alias gpl='git pull'
alias gfe='git fetch'
alias gre='git rebase'
alias gme='git merge'
alias gcp='git cherry-pick'
alias gbi='git bisect'
alias gbl='git blame'

#### Python ##################
alias python=python3
alias py=python3

#### Docker ###################
alias doco='docker-compose'
alias doma='docker-machine'

#### Neovim ###################
alias v=nvim
alias vi=nvim
alias vim=nvim
alias view='nvim -R'
alias vimdiff='nvim -d'
alias diff='nvim -d'

#### Tmux #####################
alias mux=tmuxinator
alias ws='tmuxinator start workspace'

#### Etc ######################
alias cht='cht.sh'

#### Sensitive data ###########
if [ -f "$ZDOTDIR/.zshrc.private" ]; then
  source $ZDOTDIR/.zshrc.private
fi


###############################################################################
############## Functions ######################################################
###############################################################################

# colors, a lot of colors!
function clicolors() {
    i=1
    for color in {000..255}; do;
        c=$c"$FG[$color]$color✔$reset_color  ";
        if [ `expr $i % 8` -eq 0 ]; then
            c=$c"\n"
        fi
        i=`expr $i + 1`
    done;
    echo $c | sed 's/%//g' | sed 's/{//g' | sed 's/}//g' | sed '$s/..$//';
    c=''
}

# zsh hook
# always show ls when chpwd
function chpwd() {
    # emulate -L zsh
    eza --group-directories-first
}

# benchmark zsh startup
timezsh() {
    echo "\n--- w/ zshrc ----------------"
    shell=${1-$SHELL}
    for i in $(seq 1 10); do /usr/bin/time $shell -i -c exit; done
    hyperfine -N --warmup 5 --max-runs 10 "$shell -i -c exit"
    echo "\n--- w/o zshrc ---------------"
    for i in $(seq 1 10); do /usr/bin/time $shell -i -f -c  exit; done
    hyperfine -N --warmup 5 --max-runs 10 "$shell -i -f -c exit"
}

###############################################################################
############## Experimental ###################################################
###############################################################################
