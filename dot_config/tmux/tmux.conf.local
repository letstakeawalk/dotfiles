# : << EOF
# https://github.com/gpakosz/.tmux
# (‚Äë‚óè‚Äë‚óè)> dual licensed under the WTFPL v2 license and the MIT license,
#         without any warranty.
#         Copyright 2012‚Äî Gregory Pakosz (@gpakosz).


# -- bindings ------------------------------------------------------------------

# preserve tmux stock bindings,
# while adding bindings that don't conflict with these stock bindings
# /!\ this disables some of Oh my tmux! bindings described in README.md
#   - true
#   - false (default)
tmux_conf_preserve_stock_bindings=false


# -- session creation ----------------------------------------------------------

# prompt for session name when creating a new session, possible values are:
#   - true
#   - false (default)
#   - disabled (do not modify new-session bindings)
tmux_conf_new_session_prompt=false

# new session retains current path, possible values are:
#   - true
#   - false (default)
#   - disabled (do not modify new-session bindings)
tmux_conf_new_session_retain_current_path=false


# -- windows & pane creation ---------------------------------------------------

# new window retains current path, possible values are:
#   - true
#   - false (default)
#   - disabled (do not modify new-window bindings)
tmux_conf_new_window_retain_current_path=false

# new window tries to reconnect ssh sessions, possible values are:
#   - true
#   - false (default)
#   - disabled (do not modify new-window bindings)
tmux_conf_new_window_reconnect_ssh=false

# new pane retains current path, possible values are:
#   - true (default)
#   - false
#   - disabled (do not modify split-window bindings)
tmux_conf_new_pane_retain_current_path=true

# new pane tries to reconnect ssh sessions, possible values are:
#   - true
#   - false (default)
#   - disabled (do not modify split-window bindings)
tmux_conf_new_pane_reconnect_ssh=false


# -- display -------------------------------------------------------------------

# RGB 24-bit colour support, possible values are:
#   - true
#   - false
#   - auto (default)
#
# automatic detection relies on the COLORTERM environment variable being defined
# to 'truecolor' or '24bit' or '$ tput colors' answering '16777216'
# see https://github.com/termstandard/colors
tmux_conf_24b_colour=auto


# -- theming -------------------------------------------------------------------

# enable or disable theming:
#   - enabled (default)
#   - disabled
# when disabled, all tmux_conf_theme_xxx variables are ignored except:
#   - tmux_conf_theme_pairing
#   - tmux_conf_theme_prefix
#   - tmux_conf_theme_mouse
#   - tmux_conf_theme_root
#   - tmux_conf_theme_synchronized
tmux_conf_theme=enabled

# default theme
tmux_conf_theme_colour_1="#080808"    # dark gray
tmux_conf_theme_colour_2="#303030"    # gray
tmux_conf_theme_colour_3="#8a8a8a"    # light gray
tmux_conf_theme_colour_4="#00afff"    # light blue
tmux_conf_theme_colour_5="#ffff00"    # yellow
tmux_conf_theme_colour_6="#080808"    # dark gray
tmux_conf_theme_colour_7="#e4e4e4"    # white
tmux_conf_theme_colour_8="#080808"    # dark gray
tmux_conf_theme_colour_9="#ffff00"    # yellow
tmux_conf_theme_colour_10="#ff00af"   # pink
tmux_conf_theme_colour_11="#5fff00"   # green
tmux_conf_theme_colour_12="#8a8a8a"   # light gray
tmux_conf_theme_colour_13="#e4e4e4"   # white
tmux_conf_theme_colour_14="#080808"   # dark gray
tmux_conf_theme_colour_15="#080808"   # dark gray
tmux_conf_theme_colour_16="#d70000"   # red
tmux_conf_theme_colour_17="#e4e4e4"   # white

# # --- custom theme --------------------------------------------------------------
nord_00="#2e3440"    # polar night
nord_01="#3b4252"    # polar night (black)
nord_02="#434c5e"    # polar night
nord_03="#4c566a"    # polar night (brightblack)
nord_04a="#b5bcc9"   # custom color
nord_04="#d8dee9"    # snow storm
nord_05="#e5e9f0"    # snow storm (white)
nord_06="#eceff4"    # snow storm (brightwhite)
nord_07="#8fbcbb"    # frost -- greenish blue (brightcyan)
nord_08="#88c0d0"    # frost -- sky blue (cyan)
nord_09="#81a1c1"    # frost -- grayish blue (blue)
nord_10="#5e81ac"    # frost -- dark blue
nord_11="#bf616a"    # aurora -- red (red)
nord_12="#d08770"    # aurora -- orange (yellow)
nord_13="#ebcb8b"    # aurora -- yellow (brightyellow)
nord_14="#a3be8c"    # aurora -- green  (green)
nord_15="#b48ead"    # aurora -- purple (magenta)

# window style
tmux_conf_theme_window_fg="default"
tmux_conf_theme_window_bg="default"

# highlight focused pane, possible values are:
#   - true
#   - false (default)
tmux_conf_theme_highlight_focused_pane=false

# focused pane colours:
tmux_conf_theme_focused_pane_bg="$nord_00"

# pane border style, possible values are:
#   - thin (default)
#   - fat
tmux_conf_theme_pane_border_style=thin

# pane borders colours:
tmux_conf_theme_pane_border="$nord_02"
tmux_conf_theme_pane_active_border="$nord_09"
%if #{>=:#{version},3.2}
tmux_conf_theme_pane_active_border="#{?pane_in_mode,$nord_13,#{?synchronize-panes,$nord_11,$nord_10}}"
%endif

# pane indicator colours (when you hit <prefix> + q)
tmux_conf_theme_pane_indicator="$nord_09"
tmux_conf_theme_pane_active_indicator="$nord_09"

# status line style
tmux_conf_theme_message_fg="$nord_13"
tmux_conf_theme_message_bg="$nord_01"
tmux_conf_theme_message_attr="none"

# status line command style (<prefix> : Escape)
tmux_conf_theme_message_command_fg="$nord_01"
tmux_conf_theme_message_command_bg="$nord_13"
tmux_conf_theme_message_command_attr="none"

# window modes style
tmux_conf_theme_mode_fg="$nord_01"
tmux_conf_theme_mode_bg="$nord_13"
tmux_conf_theme_mode_attr="bold"

# status line style
tmux_conf_theme_status_fg="$nord_04a"
tmux_conf_theme_status_bg="$nord_01"
tmux_conf_theme_status_attr="none"

# terminal title
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_terminal_title="#{username}@#{hostname}   ‚ùê #S   ‚óè #I-#P(#{pane_pid})"

# window status style
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_window_status_fg="$nord_04a"
tmux_conf_theme_window_status_bg="$nord_01"
tmux_conf_theme_window_status_attr="none"
tmux_conf_theme_window_status_format="#I #W"
#tmux_conf_theme_window_status_format="#{circled_window_index} #W"
#tmux_conf_theme_window_status_format="#I #W#{?window_bell_flag,üîî,}#{?window_zoomed_flag,üîç,}"

# window current status style
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_window_status_current_fg="$nord_00"
tmux_conf_theme_window_status_current_bg="$nord_08"
tmux_conf_theme_window_status_current_attr="bold"
tmux_conf_theme_window_status_current_format="#I #W"
#tmux_conf_theme_window_status_current_format="#{circled_window_index} #W"
#tmux_conf_theme_window_status_current_format="#I #W#{?window_zoomed_flag,üîç,}"

# window activity status style
tmux_conf_theme_window_status_activity_fg="default"
tmux_conf_theme_window_status_activity_bg="default"
tmux_conf_theme_window_status_activity_attr="underscore"

# window bell status style
tmux_conf_theme_window_status_bell_fg="$nord_13"
tmux_conf_theme_window_status_bell_bg="default"
tmux_conf_theme_window_status_bell_attr="blink,bold"

# window last status style
tmux_conf_theme_window_status_last_fg="$nord_08"
tmux_conf_theme_window_status_last_bg="$nord_01"
tmux_conf_theme_window_status_last_attr="none"

# status left/right sections separators
# tmux_conf_theme_left_separator_main='ÓÇ∞' # '\uE0B0'  # /!\ you don't need to install Powerline
# tmux_conf_theme_left_separator_sub='ÓÇ±' # '\uE0B1'   #   you only need fonts patched with
# tmux_conf_theme_right_separator_main='ÓÇ≤' # '\uE0B2' #   Powerline symbols or the standalone
# tmux_conf_theme_right_separator_sub='ÓÇ≥' # '\uE0B3'  #   PowerlineSymbols.otf font, see README.md
tmux_conf_theme_left_separator_main='ÓÇ¥'
tmux_conf_theme_left_separator_sub='ÓÇµ'
tmux_conf_theme_right_separator_main='ÓÇ∂'
tmux_conf_theme_right_separator_sub='ÓÇ∑'

# status left/right content:
#   - separate main sections with "|"
#   - separate subsections with ","
#   - built-in variables are:
#     - #{battery_bar}
#     - #{battery_hbar}
#     - #{battery_percentage}
#     - #{battery_status}
#     - #{battery_vbar}
#     - #{circled_session_name}
#     - #{hostname_ssh}
#     - #{hostname}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{loadavg}
#     - #{mouse}
#     - #{pairing}
#     - #{prefix}
#     - #{root}
#     - #{synchronized}
#     - #{uptime_y}
#     - #{uptime_d} (modulo 365 when #{uptime_y} is used)
#     - #{uptime_h}
#     - #{uptime_m}
#     - #{uptime_s}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_status_left=" ÓØà #S "
tmux_conf_theme_status_right=" #{prefix}#{mouse}#{pairing}#{synchronized}| %Y-%m-%d %R | #{username}#{root}@#{hostname} "
# tmux_conf_theme_status_right=" #{prefix}#{mouse}#{pairing}#{synchronized}| #{pane_current_command} | #{username}#{root}@#{hostname} "

# status left style
tmux_conf_theme_status_left_fg="$nord_01"
tmux_conf_theme_status_left_bg="$nord_09"
tmux_conf_theme_status_left_attr="bold"

# status right style
tmux_conf_theme_status_right_fg="$nord_04,$nord_04,$nord_01"
tmux_conf_theme_status_right_bg="$nord_01,$nord_03,$nord_09"
tmux_conf_theme_status_right_attr="none,none,bold"

# pairing indicator
tmux_conf_theme_pairing="‚öá"                 # U+2687
tmux_conf_theme_pairing_fg="none"
tmux_conf_theme_pairing_bg="none"
tmux_conf_theme_pairing_attr="none"

# prefix indicator
tmux_conf_theme_prefix="ÔÑú "                  # U+2328 ‚å®
tmux_conf_theme_prefix_fg="none"
tmux_conf_theme_prefix_bg="none"
tmux_conf_theme_prefix_attr="none"

# mouse indicator
tmux_conf_theme_mouse="‚Üó"                   # U+2197
tmux_conf_theme_mouse_fg="none"
tmux_conf_theme_mouse_bg="none"
tmux_conf_theme_mouse_attr="none"

# root indicator
tmux_conf_theme_root="!"
tmux_conf_theme_root_fg="none"
tmux_conf_theme_root_bg="none"
tmux_conf_theme_root_attr="bold,blink"

# synchronized indicator
tmux_conf_theme_synchronized="‚öè"            # U+268F
tmux_conf_theme_synchronized_fg="none"
tmux_conf_theme_synchronized_bg="none"
tmux_conf_theme_synchronized_attr="none"

# battery bar symbols
tmux_conf_battery_bar_symbol_full="‚óº"
tmux_conf_battery_bar_symbol_empty="‚óª"
#tmux_conf_battery_bar_symbol_full="‚ô•"
#tmux_conf_battery_bar_symbol_empty="¬∑"

# battery bar length (in number of symbols), possible values are:
#   - auto
#   - a number, e.g. 5
tmux_conf_battery_bar_length="auto"

# battery bar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_full_fg,colour_empty_fg,colour_bg"
tmux_conf_battery_bar_palette="gradient"

# battery hbar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_low,colour_half,colour_full"
tmux_conf_battery_hbar_palette="gradient"

# battery vbar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_low,colour_half,colour_full"
tmux_conf_battery_vbar_palette="gradient"

# symbols used to indicate whether battery is charging or discharging
tmux_conf_battery_status_charging="‚Üë"       # U+2191
tmux_conf_battery_status_discharging="‚Üì"    # U+2193
#tmux_conf_battery_status_charging="üîå"     # U+1F50C
#tmux_conf_battery_status_discharging="üîã"  # U+1F50B

# clock style (when you hit <prefix> + t)
# you may want to use %I:%M %p in place of %R in tmux_conf_theme_status_right
tmux_conf_theme_clock_colour="$nord_10"
tmux_conf_theme_clock_style="24"


# -- clipboard -----------------------------------------------------------------

# in copy mode, copying selection also copies to the OS clipboard
#   - true
#   - false (default)
#   - disabled
# on Linux, this requires xsel, xclip or wl-copy
tmux_conf_copy_to_os_clipboard=false


# ------------------------------------------------------------------------------
# -- User Customizations -------------------------------------------------------
# -- this is the place to override or undo settings ----------------------------
# ------------------------------------------------------------------------------
set-environment -g TMUX_CONF_LOCAL "$XDG_DATA_HOME/chezmoi/dot_config/tmux/tmux.conf.local"
set-option -sa terminal-overrides ',alacritty:RGB'  # enable truecolor for alacritty

# window navigation/management
bind Space last-window
bind Tab next-layout
# bind -r -T root Home previous-window # navigate to previous tmux window
# bind -r -T root End  next-window     # navigate to next tmux window
bind _ split-window -v -l 10   # split current window vertically
bind - split-window -h         # split current window horizontally

# pane navigation/management
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"
bind -r h if-shell "$is_vim" { send-keys C-w h } { if -F '#{pane_at_top}'    '' { select-pane -U } }
bind -r k if-shell "$is_vim" { send-keys C-w k } { if -F '#{pane_at_bottom}' '' { select-pane -D } }
bind -r j if-shell "$is_vim" { send-keys C-w j } { if -F '#{pane_at_left}'   '' { select-pane -L } }
bind -r l if-shell "$is_vim" { send-keys C-w l } { if -F '#{pane_at_right}'  '' { select-pane -R } }
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
bind -r H resize-pane -U 2
bind -r K resize-pane -D 2
bind -r J resize-pane -L 2
bind -r L resize-pane -R 2

# copy mode navigation
bind -T copy-mode-vi 'C-h' if -F '#{pane_at_top}' '' 'select-pane -U'
bind -T copy-mode-vi 'C-k' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -T copy-mode-vi 'C-j' if -F '#{pane_at_left}' '' 'select-pane -L'
bind -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
bind -T copy-mode-vi h     send-keys   Up
bind -T copy-mode-vi k     send-keys   Down
bind -T copy-mode-vi j     send-keys   Left
bind -T copy-mode-vi l     send-keys   Right

# navigation: choose-tree, choose-buffer, choose-client, etc
bind -T root  h if -F "#{==:#{pane_mode},tree-mode}" "send k" "send h"  #    Up if in tmux menu, h otherwise
bind -T root  k if -F "#{==:#{pane_mode},tree-mode}" "send j" "send k"  #  Down if in tmux menu, k otherwise
bind -T root  j if -F "#{==:#{pane_mode},tree-mode}" "send h" "send j"  #  Left if in tmux menu, j otherwise
bind -T root  l if -F "#{==:#{pane_mode},tree-mode}" "send l" "send l"  # Right if in tmux menu, l otherwise  # redundant

# resizing
# bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
# bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
# bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
# bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'
#
# bind-key -T copy-mode-vi M-h resize-pane -L 1
# bind-key -T copy-mode-vi M-j resize-pane -D 1
# bind-key -T copy-mode-vi M-k resize-pane -U 1
# bind-key -T copy-mode-vi M-l resize-pane -R 1

# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# popup windows
bind n popup -h 90% -w 95% -E -b rounded -S fg='#5E81AC' # temparary popup
# detach if current session is popup, forward the key if in nvim, do nothing otherwise
bind -n 'C-\' if-shell "test $(tmux display-message -p '#{session_name}') = 'popup'" { detach-client -s popup } { if-shell "$is_vim" { send-keys 'C-\' } }
# toggle popup session
# bind -n 'C-\' if-shell "test $(tmux display-message -p '#{session_name}') = 'popup'" "detach-client -s popup" "display-popup -h 90% -w 80% -E -b rounded -S fg='#5E81AC' 'tmux new -As popup'"

# tmuxessionizer
bind s run-shell 'tmux display-popup -w 80 -h 40% -BE tmx session'

# sync panes
bind C-s setw synchronize-panes

# increase history size
#set -g history-limit 10000

# start with mouse mode enabled
set -g mouse on

# force Vi mode
#   really you should export VISUAL or EDITOR environment variable, see manual
#set -g status-keys vi
#set -g mode-keys vi

# replace C-b by C-a instead of using both prefixes
set -gu prefix2
unbind C-a
# unbind C-b
# set -g prefix C-a
# bind C-a send-prefix

# if you don't want Oh my tmux! to alter a binding, use #!important
# bind c new-window -c '#{pane_current_path}' #!important

# move status line to top
#set -g status-position top

# set main pane size
set -g other-pane-width 40%
set -g other-pane-height 25%

# use 256 colors
# set-option default-terminal "tmux-256color"
# set-option default-terminal "xterm-256color"

# automatic rename
setw -g automatic-rename on

# Do not exit from tmux when closing a session
set -g detach-on-destroy off

# skip "kill-pane x? (y/n)" prompt
bind-key x kill-pane

# -- tpm -----------------------------------------------------------------------

# while I don't use tpm myself, many people requested official support so here
# is a seamless integration that automatically installs plugins in parallel

# whenever a plugin introduces a variable to be used in 'status-left' or
# 'status-right', you can use it in 'tmux_conf_theme_status_left' and
# 'tmux_conf_theme_status_right' variables.

# by default, launching tmux will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_launch=false

# by default, reloading the configuration will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_reload=false

# by default, reloading the configuration will uninstall tpm and plugins when no
# plugins are enabled
#   - true (default)
#   - false
tmux_conf_uninstall_plugins_on_reload=true

# /!\ the tpm bindings differ slightly from upstream:
#   - installing plugins: <prefix> + I
#   - uninstalling plugins: <prefix> + Alt + u
#   - updating plugins: <prefix> + u

# /!\ do not add set -g @plugin 'tmux-plugins/tpm'
# /!\ do not add run '~/.tmux/plugins/tpm/tpm'

# to enable a plugin, use the 'set -g @plugin' syntax:
# visit https://github.com/tmux-plugins for available plugins
#set -g @plugin 'tmux-plugins/tmux-copycat'
#set -g @plugin 'tmux-plugins/tmux-cpu'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @continuum-restore 'on'


# -- custom variables ----------------------------------------------------------

# to define a custom #{foo} variable, define a POSIX shell function between the
# '# EOF' and the '# "$@"' lines. Please note that the opening brace { character
# must be on the same line as the function name otherwise the parse won't detect
# it.
#
# then, use #{foo} in e.g. the 'tmux_conf_theme_status_left' or the
# 'tmux_conf_theme_status_right' variables.

# ------------------------------------------------------------------------------

# # /!\ do not remove the following line
# EOF
#
# # /!\ do not "uncomment" the functions: the leading "# " characters are needed
#
# weather() {                                         # see https://github.com/chubin/wttr.in#one-line-output
#   curl -f -s -m 2 'wttr.in?format=3' || printf '\n' # /!\ make sure curl is installed
#   sleep 900                                         # sleep for 15 minutes, throttle network requests whatever the value of status-interval
# }
#
# online() {
#   ping -c 1 1.1.1.1 >/dev/null 2>&1 && printf '‚úî' || printf '‚úò'
# }
#
# wan_ip_v4() {
#   curl -f -s -m 2 -4 ifconfig.me
#   sleep 300                                         # sleep for 5 minutes, throttle network requests whatever the value of status-interval
# }
#
# wan_ip_v6() {
#   curl -f -s -m 2 -6 ifconfig.me
#   sleep 300                                         # sleep for 5 minutes, throttle network requests whatever the value of status-interval
# }
#
# "$@"
# # /!\ do not remove the previous line
# #     do not write below this line
